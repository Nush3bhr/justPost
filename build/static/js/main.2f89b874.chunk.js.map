{"version":3,"sources":["Components/Posts.js","Components/BondCalculator.js","Components/RandomNo.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","backgroundColor","bullet","display","margin","transform","title","fontSize","pos","marginBottom","textField","width","Posts","classes","useState","post","setPost","values","setValues","name","setName","toName","setToName","handleChange","event","target","value","handleDelete","cardId","a","console","log","prompt","axios","delete","data","id","fetchData","alert","handleSubmit","preventDefault","trim","receiver","postedData","useEffect","get","getData","className","style","textAlign","onSubmit","Typography","marginTop","fontWeight","TextField","required","fullWidth","label","onChange","multiline","variant","marginLeft","Button","color","type","size","Grid","container","spacing","map","myData","index","Date","date","item","lg","sm","md","Card","root","padding","border","boxShadow","CardContent","moment","fromNow","gutterBottom","toUpperCase","fontStyle","Box","onClick","_id","BondCalculator","string1","setString1","string2","setString2","setValue","disabled","setDisabled","percent","parseInt","Math","random","valueNeeded","message","partner","delay","ms","Promise","res","setTimeout","placeholder","fullwidth","fontFamily","RandomNo","randomNo","setRandomNo","input","setInput","ans","setAns","chances","setChances","disableReset","guessInput","Number","App","AppBar","position","Toolbar","Avatar","alt","src","flexGrow","m","to","textDecoration","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f89b874.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./Posts.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextField, Box } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: \"aqua\",\r\n  },\r\n\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  textField: {\r\n    width: 500,\r\n  },\r\n}));\r\nconst Posts = () => {\r\n  const classes = useStyles();\r\n\r\n  const [post, setPost] = useState(\"\");\r\n  const [values, setValues] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [toName, setToName] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"name\") {\r\n      setName(event.target.value);\r\n    } else if (event.target.name === \"post\") {\r\n      setPost(event.target.value);\r\n    } else {\r\n      setToName(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (cardId) => {\r\n    console.log(\"values:\", values);\r\n    let pswd = prompt(\"Enter pass to delete\");\r\n    if (pswd === \"!#%&\") {\r\n      await axios.delete(\"https://just-post-da.herokuapp.com/api/items/\", {\r\n        data: {\r\n          id: cardId,\r\n        },\r\n      });\r\n      fetchData();\r\n    } else {\r\n      alert(\"Idiot, this is my APP! Only I have the right to delete!!\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (post && post.trim() && name && name.trim()) {\r\n        const postedData = await axios.post(\r\n          \"https://just-post-da.herokuapp.com/api/items/\",\r\n          {\r\n            name: name.trim(),\r\n            post: post.trim(),\r\n            receiver: toName && toName.trim(),\r\n          }\r\n        );\r\n        alert(post + \" is posted successfully to   \" + toName);\r\n        fetchData();\r\n        setName(\"\");\r\n        setPost(\"\");\r\n        setToName(\"\");\r\n\r\n        console.log(\"postedData: \", postedData);\r\n      } else {\r\n        alert(\"Post can't be empty\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const getData = await axios.get(\r\n        \"https://just-post-da.herokuapp.com/api/items/\"\r\n      );\r\n      console.log(\"getData:\", getData);\r\n      if (getData && getData.data) {\r\n        setValues(getData.data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <form\r\n        style={{ margin: \"20px\", width: \"50%\", textAlign: \"center\" }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography\r\n          style={{\r\n            marginTop: \"100px\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"30px\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Let ur WORDS add icing to someone's Day!\r\n        </Typography>\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          style={{ margin: \"15px\" }}\r\n        />\r\n\r\n        <TextField\r\n          fullWidth\r\n          name=\"toName\"\r\n          value={toName}\r\n          label=\"Dedicating To\"\r\n          onChange={handleChange}\r\n          style={{ margin: \"15px\" }}\r\n        />\r\n\r\n        <TextField\r\n          required\r\n          multiline\r\n          fullWidth\r\n          name=\"post\"\r\n          label=\"Quote\"\r\n          variant=\"outlined\"\r\n          value={post}\r\n          onChange={handleChange}\r\n          style={{ marginTop: \"40px\", marginLeft: \"10px\" }}\r\n        />\r\n\r\n        <Button\r\n          style={{\r\n            margin: \"20px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          size=\"large\"\r\n        >\r\n          Post\r\n        </Button>\r\n      </form>\r\n\r\n      <div>\r\n        <Grid container spacing={2}>\r\n          {values &&\r\n            values.map((myData, index) => {\r\n              let d = new Date(myData.date);\r\n              return (\r\n                <Grid item lg={8} sm={2} md={6}>\r\n                  <Card\r\n                    key={index}\r\n                    className={classes.root}\r\n                    style={{\r\n                      margin: \"20px\",\r\n                      padding: \"20px\",\r\n                      backgroundColor: \"rgb(255, 251, 219)\",\r\n                      border: \"2px black solid\",\r\n                      boxShadow: \"0 8px 8px 0 rgba(0, 0, 0, 0.4)\",\r\n                    }}\r\n                  >\r\n                    <CardContent>\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        style={{ textAlign: \"right\", fontSize: \"15px\" }}\r\n                      >\r\n                        {moment(myData.date).fromNow()}\r\n                      </Typography>\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontSize: \"16px\",\r\n                        }}\r\n                        className={classes.title}\r\n                        color=\"textSecondary\"\r\n                        gutterBottom\r\n                      >\r\n                        {(myData.name && myData.name.toUpperCase()) +\r\n                          \" dedicated to \" +\r\n                          (myData.receiver\r\n                            ? myData.receiver.toUpperCase()\r\n                            : \"EVERYONE\")}\r\n                      </Typography>\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"bold\",\r\n                          fontStyle: \"italic\",\r\n                          fontSize: \"18px\",\r\n                          marginTop: \"20px\",\r\n                        }}\r\n                      >\r\n                        {myData.post}\r\n                      </Typography>\r\n                      <Box style={{ textAlign: \"right\" }}>\r\n                        <DeleteIcon onClick={() => handleDelete(myData._id)} />\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\n\r\nconst BondCalculator = () => {\r\n  const [string1, setString1] = useState(\"\");\r\n  const [string2, setString2] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"string1\") {\r\n      setString1(event.target.value);\r\n    } else if (event.target.name === \"string2\") {\r\n      setString2(event.target.value);\r\n    }\r\n  };\r\n  const percent = parseInt(Math.random() * 100);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const valueNeeded =\r\n      string1 + \" is \" + percent + \" % \" + \"compatible with \" + string2 + \".\";\r\n\r\n    const postedData = await axios.post(\r\n      \"https://just-post-da.herokuapp.com/api/bonds/\",\r\n      {\r\n        name: string1.trim(),\r\n        message: valueNeeded,\r\n        partner: string2.trim(),\r\n      }\r\n    );\r\n\r\n    const delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n    setValue(\"Wait!!\");\r\n    setDisabled(true);\r\n    await delay(1000);\r\n    setValue(\"Testing your compatibility.......\");\r\n    await delay(1500);\r\n    setValue(\"Calculating........\");\r\n    await delay(1000);\r\n    setValue(\"Finally!!!\");\r\n    await delay(1500);\r\n    setValue(valueNeeded);\r\n    setDisabled(false);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setString1(\"\");\r\n    setString2(\"\");\r\n    setValue(\"\");\r\n    setDisabled(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: \"center\", marginTop: \"100px\" }}>\r\n        <Typography variant=\"h3\">Test Your BOND!</Typography>\r\n      </div>\r\n      <Card\r\n        style={{\r\n          marginTop: \"50px\",\r\n          width: \"30%\",\r\n          marginLeft: \"35%\",\r\n          padding: \"20px\",\r\n          backgroundColor: \"rgb(238, 255, 252)\",\r\n          boxShadow: \"0 8px 8px 0 rgba(0, 0, 0, 0.4)\",\r\n        }}\r\n      >\r\n        <CardContent style={{ fontWeight: \"bold\" }}>\r\n          <form onSubmit={handleSubmit}>\r\n            <Typography style={{ fontWeight: \"bold\" }}>Your Name:</Typography>\r\n\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              name=\"string1\"\r\n              value={string1}\r\n              onChange={handleChange}\r\n              style={{ margin: \"10px\" }}\r\n              disabled={disabled}\r\n            />\r\n            <Typography style={{ fontWeight: \"bold\" }}>\r\n              Partner's Name:\r\n            </Typography>\r\n\r\n            <TextField\r\n              fullwidth\r\n              required\r\n              variant=\"outlined\"\r\n              type=\"text\"\r\n              placeholder=\"Test your bond with\"\r\n              name=\"string2\"\r\n              value={string2}\r\n              onChange={handleChange}\r\n              style={{ margin: \"10px\" }}\r\n              disabled={disabled}\r\n            />\r\n            <br />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              type=\"submit\"\r\n              style={{ margin: \"10px\" }}\r\n              disabled={disabled}\r\n            >\r\n              Check\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              style={{ margin: \"10px\" }}\r\n              // disabled={disableReset}\r\n              onClick={handleReset}\r\n            >\r\n              Reset\r\n            </Button>\r\n\r\n            <Typography\r\n              style={{\r\n                margin: \"25px\",\r\n                fontFamily: \"revert\",\r\n                color: \"brown\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              {value}\r\n            </Typography>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default BondCalculator;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst RandomNo = () => {\r\n  const [randomNo, setRandomNo] = useState(parseInt(Math.random() * 100));\r\n  const [input, setInput] = useState();\r\n  const [ans, setAns] = useState(\"\");\r\n  const [chances, setChances] = useState(7);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [disableReset, setDisableReset] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n  const handleReset = () => {\r\n    setInput(\"\");\r\n    setAns(\"\");\r\n    setChances(7);\r\n    setDisabled(false);\r\n    setRandomNo(parseInt(Math.random() * 100));\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setInput(\"\");\r\n  };\r\n\r\n  const message = (guessInput) => {\r\n    let random = Number(randomNo);\r\n    guessInput = Number(guessInput);\r\n    console.log(\"guessInput:\", guessInput, \"randomNumber:\", random);\r\n    if (chances === 1 && guessInput !== random) {\r\n      return (\r\n        \"Oops, U have lost all ur CHANCES :(   Can't u even guess '\" +\r\n        random +\r\n        \"' ??\"\r\n      );\r\n    }\r\n    if (guessInput === random - 1) {\r\n      return guessInput + \" is LOW but u r almost there!!\";\r\n    } else if (guessInput === random + 1) {\r\n      return guessInput + \" is HIGH but u r almost there!!\";\r\n    } else if (guessInput === random) {\r\n      return \"Hurray!! It's a correct guess.\";\r\n    } else if (guessInput < random - 1 && guessInput >= random - 5) {\r\n      return \"low but very close!!\";\r\n    } else if (guessInput > random + 1 && guessInput <= random + 5) {\r\n      return \"High butvery  close!!\";\r\n    } else if (guessInput < random - 5 && guessInput >= random - 10) {\r\n      return \"low but near!!\";\r\n    } else if (guessInput > random + 5 && guessInput <= random + 10) {\r\n      return \"High but near!!\";\r\n    } else if (guessInput < random - 10) {\r\n      return \"Too Low!!\";\r\n    } else if (guessInput > random + 10) {\r\n      return \"Too High!!\";\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n    setDisabled(true);\r\n\r\n    await delay(1000);\r\n    setAns(message(input));\r\n\r\n    if (chances === 1) {\r\n      setDisabled(true);\r\n      setChances(0);\r\n    } else if (Number(input) === Number(randomNo)) {\r\n      setDisabled(true);\r\n    } else {\r\n      setChances(chances - 1);\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: \"center\", marginTop: \"150px\" }}>\r\n        <Typography variant=\"h4\">Guess the NUMBER!</Typography>\r\n      </div>\r\n      <Card\r\n        style={{\r\n          marginTop: \"50px\",\r\n          width: \"30%\",\r\n          marginLeft: \"35%\",\r\n          boxShadow: \"0 8px 8px 0 rgba(0, 0, 0, 0.4)\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <CardContent style={{ fontWeight: \"bold\" }}>\r\n          <form onSubmit={handleSubmit}>\r\n            <Typography style={{ fontWeight: \"bold\" }}>\r\n              Enter your Guess no (0-100) :\r\n            </Typography>\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              placeholder=\"Type your No\"\r\n              value={input}\r\n              onChange={handleChange}\r\n              disabled={disabled}\r\n              style={{ margin: \"10px\" }}\r\n            />\r\n            <Typography style={{ margin: \"30px\" }}>\r\n              {\" \"}\r\n              {chances + \" chances u have!!\"}\r\n            </Typography>\r\n\r\n            <Typography\r\n              style={{\r\n                margin: \"30px\",\r\n                fontFamily: \"cursive\",\r\n                color: \"green\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {ans}\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              type=\"submit\"\r\n              style={{ margin: \"20px\" }}\r\n              disabled={disabled}\r\n            >\r\n              Check\r\n            </Button>\r\n            <Button\r\n              onClick={handleClear}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              style={{ margin: \"20px\" }}\r\n              disabled={disabled}\r\n            >\r\n              Clear\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              style={{ margin: \"20px\" }}\r\n              disabled={disableReset}\r\n              onClick={handleReset}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default RandomNo;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Posts from \"./Components/Posts\";\r\n\r\nimport BondCalculator from \"./Components/BondCalculator\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport RandomNo from \"./Components/RandomNo\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <AppBar position=\"fixed\" style={{ backgroundColor: \"rgb(59, 23, 14)\" }}>\r\n          <Toolbar>\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              src=\"https://s3.amazonaws.com/www-inside-design/uploads/2018/01/creativity-quotes.jpg\"\r\n            />\r\n\r\n            <Typography variant=\"h6\" style={{ flexGrow: \"1\" }}>\r\n              <Box fontWeight=\"fontWeightBold\" fontSize=\"h4.fontSize\" m={1}>\r\n                PostIt\r\n              </Box>\r\n            </Typography>\r\n            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n              {\" \"}\r\n              <Typography style={{ margin: \"10px\" }}>Home</Typography>\r\n            </Link>\r\n            <Link\r\n              to=\"/RandomNo\"\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n            >\r\n              {\" \"}\r\n              <Typography style={{ margin: \"10px\" }}>Game</Typography>\r\n            </Link>\r\n            <Link\r\n              to=\"/BondCalculator\"\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n            >\r\n              {\" \"}\r\n              <Typography style={{ margin: \"10px\" }}> Test Bond</Typography>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Posts} />\r\n          <Route path=\"/BondCalculator\" exact component={BondCalculator} />\r\n          <Route path=\"/RandomNo\" exact component={RandomNo} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}